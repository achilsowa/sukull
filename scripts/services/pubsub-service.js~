/**
 * Created by tchapda gabi on 12/06/2015.
 */

sukuApp.factory('PubSubService', ['Strophe', 'RegisterService', '$q', function (Strophe, Register, $q){
    
    var Pubsub = {
	NS_DATA_FORMS : "jabber:x:data",
	NS_PUBSUB : "http://jabber.org/protocol/pubsub",
	NS_PUBSUB_OWNER : "http://jabber.org/protocol/pubsub#owner",
	NS_PUBSUB_ERRORS : "http://jabber.org/protocol/pubsub#errors",
	NS_PUBSUB_NODE_CONFIG : "http://jabber.org/protocol/pubsub#node_config",
	items : []
    };
    
    Pubsub.conn = Register.conn;
    Pubsub.service = 'pubsub.'+Strophe.ServerAddr;

    Pubsub.sendIQq = function (iq) {
	var d = $q.defer();
	Pubsub.conn.sendIQ(iq, function (iq){d.resolve(iq);}, function (error) {d.reject(error)});
	return d.promise;
    };

    Pubsub.createNode = function(node) {

	var iq = $iq({to: Pubsub.service, type: 'set'})
	    .c('pubsub', {xmlns: Pubsub.NS_PUBSUB})
	    .c('create', {node:node})
	    .up()
	    .c('configure')
	    .c('x', {xmlns:Pubsub.NS_DATA_FORMS, type:'submit'})
	    .c('field', {'var': 'FORM_TYPE'})
	    .c('value').t(Pubsub.NS_PUBSUB_NODE_CONFIG)
	    .up().up()
	    .c('field', {'var': 'pubsub#send_last_published_item'})
	    .c('value').t("on_sub")
	    .up().up()
	    .c('field', {'var': 'pubsub#publish_model'})
	    .c('value').t("open")
	    .up().up()
	    .c('field', {'var': 'pubsub#expire_time'})
	    .c('value').t("31536000")
	    .up().up()
	    .c('field', {'var': 'pubsub#max_items'})
	    .c('value').t("1000");

	console.log(iq);
	return Pubsub.sendIQq(iq);
    };
    
    Pubsub.deleteNode = function(node) {
	var iq = $iq({to: Pubsub.service, type: 'set'})
	    .c('pubsub', {xmlns: Pubsub.NS_PUBSUB_OWNER})
	    .c('delete', {node: node});
	
	return Pubsub.sendIQq(iq);
    };

    Pubsub.configureNode = function(node) {
	
    };

    Pubsub.publish = function (node, item) {
	var iq = $iq({to: Pubsub.service, type: 'set'})
	    .c('pubsub', {xmlns: Pubsub.NS_PUBSUB})
	    .c('publish', {node: node})
	    .c('item')
	    .c('body').t(JSON.stringify(item));
	
	return Pubsub.sendIQq(iq);
    };


    Pubsub.deleteItem = function (node, item_id) {
	
    };

    Pubsub.getItems = function (node) {
	var iq = $iq({to: Pubsub.service, type: 'get'})
	    .c('pubsub', {xmlns: Pubsub.NS_PUBSUB})
	    .c('items', {node: node});
	return Pubsub.sendIQq(iq);	
    };


    Pubsub.subscribe = function (node) {
	var iq = $iq({to: Pubsub.service, type: 'set'})
	    .c('pubsub', {xmlns: Pubsub.NS_PUBSUB})
	    .c('subscribe', {node: node, jid: (Pubsub.conn.jid)});
	return Pubsub.sendIQq(iq);
    };
    

    Pubsub.new_item = function (item) {
	console.log(item);
	Pubsub.items.push(item);
	return true;
    };

        
    Pubsub.conn.addHandler(Pubsub.new_item, null, "message", null, null, Pubsub.service);
    

    window.pubsub = Pubsub;
    return Pubsub;
}]);
